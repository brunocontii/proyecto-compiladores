program {

    void tds_printf(integer x) extern;
    void print_int(integer x) extern;
    void print_bool(bool x) extern;
    integer get_int() extern;
    bool get_bool() extern;

    integer factorial(integer x) {

        if (x < 0) then {
            return -1;
        }

        if (x < 2) then {
            return 1;
        }

        return x * factorial(x-1);
    }

    integer pow(integer x, integer y) {
        integer z = x;
        integer w = y;

        if (x == 0) then {
            return 0;
        }

        if (y == 0) then {
            return 1;
        }

        if (y == 1) then {
            return x;
        }

        while (w > 1) {
            z = z * x;
            w = w - 1;
        }
        return z;
    }

    integer sqrt(integer n) {
        integer lo = 0;
        integer hi = 0;

        if (n < 0) then {
            return -1;
        }
        
        if (n < 4) then {
            hi = n;
        } else {
            hi = n / 2 + 1;
        }

        while (lo < hi || lo == hi) {
            integer mid = lo + (hi - lo) / 2;
            integer sq = mid * mid;
            if (sq == n) then {
                return mid;
            } else {
                if (sq < 0 || sq > n) then {
                    hi = mid - 1;
                } else {
                    lo = mid + 1;
                }
            }
        }
    return hi; 
    }

    integer hipotenusa(integer catAd, integer catOp) {
        integer hip = 0;
        catAd = pow(catAd,2);
        catOp = pow(catOp,2);
        hip = catAd + catOp;
        return sqrt(hip);
    }

    integer fibonacci(integer n) {
        if (n < 0) then {
            return -1;
        }
        if (n < 2) then {
            return n;
        }
        return fibonacci(n-1) + fibonacci(n-2);
    }

    void main() {
        bool a = true;
        bool b = false;
        integer x = 0;
        integer y = 0;
        integer z = 0;

        while (a) {

            tds_printf(7);
            b = get_bool();
            tds_printf(0);
            if (b) then {
                x = get_int();
                y = factorial(x);
                tds_printf(6);
                print_int(y);
            }

            tds_printf(8);
            b = get_bool();
            tds_printf(0);
            if (b) then {
                x = get_int();
                z = get_int();
                y = pow(x,z);
                tds_printf(6);
                print_int(y);
            }

            tds_printf(9);
            b = get_bool();
            tds_printf(0);
            if (b) then {
                x = get_int();
                y = sqrt(x);
                tds_printf(6);
                print_int(y);
            }

            tds_printf(10);
            b = get_bool();
            tds_printf(0);
            if (b) then {
                x = get_int();
                z = get_int();
                y = hipotenusa(x,z);
                tds_printf(6);
                print_int(y);
            }

            tds_printf(11);
            b = get_bool();
            tds_printf(0);
            if (b) then {
                x = get_int();
                y = fibonacci(x);
                tds_printf(6);
                print_int(y);
            }

            a = get_bool();
        }
    }
}